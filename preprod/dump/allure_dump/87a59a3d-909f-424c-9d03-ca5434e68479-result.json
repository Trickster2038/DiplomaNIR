{"name": "test_error_create_levelsdata", "status": "passed", "description": "Test for wrong code proxy-request to CRUD.CreateLevelsData", "steps": [{"name": "Send request", "status": "passed", "attachments": [{"name": "Request URL", "source": "49b392c9-7df7-4132-b055-a14a67fa147b-attachment.txt", "type": "text/plain"}, {"name": "Request payload", "source": "7995a4c9-c666-4caf-bb62-1c65bb40eedf-attachment.txt", "type": "text/plain"}, {"name": "Response payload", "source": "89f891f8-3460-42c7-a54e-7ea7c15cdcb8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "port", "value": "'8084'"}, {"name": "url", "value": "'levels'"}, {"name": "payload", "value": "{'user_id': 1, 'is_code_level': True, 'metainfo': {'obj_type': 'levels_data', 'action': 'create'}, 'data': {'id': 5, 'wide_description': 'This is wide desr', 'code': 'Code example', 'question': {'src': 'modul_e half_adder(  \\n    output S,C,  \\n    input A,B  \\n    );  \\nxor(S,A,B);  \\nand(C,A,B);  \\nendmodule  \\n \\nmodule full_adder(  \\n    output S,Cout,  \\n    input A,B,Cin  \\n    );  \\nwire s1,c1,c2;  \\nhalf_adder HA1(s1,c1,A,B);  \\nhalf_adder HA2(S,c2,s1,Cin);  \\nor OG1(Cout,c1,c2);  \\n \\nendmodule  \\n \\nmodule ripple_adder_4bit(  \\n    output [3:0] Sum,  \\n    output Cout,  \\n    input [3:0] A,B,  \\n    input Cin  \\n    );  \\nwire c1,c2,c3;  \\nfull_adder FA1(Sum[0],c1,A[0],B[0],Cin),  \\nFA2(Sum[1],c2,A[1],B[1],c1),  \\nFA3(Sum[2],c3,A[2],B[2],c2),  \\nFA4(Sum[3],Cout,A[3],B[3],c3);  \\n \\nendmodule\\n', 'tb': 'module adder_tb;  \\n// Inputs  \\nreg [3:0] A;  \\nreg [3:0] B;  \\nreg Cin;  \\n// Outputs  \\nwire [3:0] Sum;  \\nwire Cout;  \\n// Instantiate the Unit Under Test (UUT)  \\nripple_adder_4bit uut (  \\n.Sum(Sum),  \\n.Cout(Cout),  \\n.A(A),  \\n.B(B),  \\n.Cin(Cin)  \\n);  \\ninitial begin  \\n// Initialize Inputs  \\nA = 0;  \\nB = 0;  \\nCin = 0;  \\n// Wait 100 ns for global reset to finish  \\n#100;  \\n// Add stimulus here  \\nA=4\\'b0001;B=4\\'b0000;Cin=1\\'b0;  \\n#10 A=4\\'b1010;B=4\\'b0011;Cin=1\\'b0;  \\n#10 A=4\\'b1101;B=4\\'b1010;Cin=1\\'b1;  \\nend  \\ninitial begin  \\n$dumpfile(\"adder.vcd\");  \\n$dumpvars;  \\nend  \\nendmodule\\n'}, 'answer': ''}}"}], "start": 1678807202799, "stop": 1678807202814}, {"name": "Check response [error]", "status": "passed", "attachments": [{"name": "Response payload", "source": "bf7708bd-1213-4cb9-89cf-520d3bdf6662-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "response", "value": "<Response [400]>"}], "start": 1678807202814, "stop": 1678807202814}], "start": 1678807202799, "stop": 1678807202814, "uuid": "07add702-3a2f-4447-89b7-eabdbd136126", "historyId": "14d52b203bc33518da1dfc56d36a4153", "testCaseId": "440d5bf88a0c16856c8ef1705f9c5cf5", "fullName": "test_gateway#test_error_create_levelsdata", "labels": [{"name": "epic", "value": "Integrational testing"}, {"name": "story", "value": "Gateway"}, {"name": "suite", "value": "test_gateway"}, {"name": "host", "value": "gwynbleidd-NBR-WAX9"}, {"name": "thread", "value": "35886-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_gateway"}]}